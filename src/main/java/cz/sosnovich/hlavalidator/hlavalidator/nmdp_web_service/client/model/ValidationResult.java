/*
 * Multiple Allele Code Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cz.sosnovich.hlavalidator.hlavalidator.nmdp_web_service.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * The results returned by the /validate endpoint
 */
@ApiModel(description = "The results returned by the /validate endpoint")
@JsonPropertyOrder({
        ValidationResult.JSON_PROPERTY_VALID,
        ValidationResult.JSON_PROPERTY_HISTORICALLY_VALID,
        ValidationResult.JSON_PROPERTY_DESCRIPTION,
        ValidationResult.JSON_PROPERTY_CONDITIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-12-26T01:59:51.225722100+01:00[Europe/Prague]")
public class ValidationResult implements ValidatedTypingValidationResultOneOf {
  public static final String JSON_PROPERTY_VALID = "valid";
  public static final String JSON_PROPERTY_HISTORICALLY_VALID = "historicallyValid";
  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  public static final String JSON_PROPERTY_CONDITIONS = "conditions";
  private Boolean valid;
  private Boolean historicallyValid;
  private String description;
  private List<AlleleValidationCondition> conditions = null;


  public ValidationResult valid(Boolean valid) {

    this.valid = valid;
    return this;
  }

  /**
   * Whether the type is currently valid
   *
   * @return valid
   **/
  @ApiModelProperty(required = true, value = "Whether the type is currently valid")
  @JsonProperty(JSON_PROPERTY_VALID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getValid() {
    return valid;
  }


  public void setValid(Boolean valid) {
    this.valid = valid;
  }


  public ValidationResult historicallyValid(Boolean historicallyValid) {

    this.historicallyValid = historicallyValid;
    return this;
  }

  /**
   * Whether the type was historically valid (Delete/Rename)
   *
   * @return historicallyValid
   **/
  @ApiModelProperty(required = true, value = "Whether the type was historically valid (Delete/Rename)")
  @JsonProperty(JSON_PROPERTY_HISTORICALLY_VALID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getHistoricallyValid() {
    return historicallyValid;
  }


  public void setHistoricallyValid(Boolean historicallyValid) {
    this.historicallyValid = historicallyValid;
  }


  public ValidationResult description(String description) {

    this.description = description;
    return this;
  }

  /**
   * A text description of the validation result
   *
   * @return description
   **/
  @ApiModelProperty(required = true, value = "A text description of the validation result")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ValidationResult conditions(List<AlleleValidationCondition> conditions) {

    this.conditions = conditions;
    return this;
  }

  public ValidationResult addConditionsItem(AlleleValidationCondition conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<AlleleValidationCondition>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

  /**
   * A list of conditions determined on individual alleles
   *
   * @return conditions
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of conditions determined on individual alleles")
  @JsonProperty(JSON_PROPERTY_CONDITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AlleleValidationCondition> getConditions() {
    return conditions;
  }


  public void setConditions(List<AlleleValidationCondition> conditions) {
    this.conditions = conditions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValidationResult validationResult = (ValidationResult) o;
    return Objects.equals(this.valid, validationResult.valid) &&
            Objects.equals(this.historicallyValid, validationResult.historicallyValid) &&
            Objects.equals(this.description, validationResult.description) &&
            Objects.equals(this.conditions, validationResult.conditions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(valid, historicallyValid, description, conditions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValidationResult {\n");
    sb.append("    valid: ").append(toIndentedString(valid)).append("\n");
    sb.append("    historicallyValid: ").append(toIndentedString(historicallyValid)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

